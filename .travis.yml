language: android

branches:
  only:
    - master

sudo: true

jdk:
  - oraclejdk8

env:
  global:
    # Where to run androidTests
    - EMULATOR_API=22 # 24 has some issues, probably some overlayed window
    - EMULATOR_ABI=armeabi-v7a
    - EMULATOR_TAG=default
    - PATH=$ANDROID_HOME:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH

android:
  components:
    - tools
    - platform-tools
    - build-tools-28.0.3
    - android-28
    - doc-27

install:
  - echo $ANDROID_HOME # We assume this is correctly set when setting path
  - sdkmanager --list || true # Look at the packages
  - echo yes | sdkmanager "tools" # Ensure tools is updated
  - echo yes | sdkmanager "emulator" # Ensure emulator is present

  - wget http://dl.google.com/android/ndk/android-ndk-r10d-linux-x86_64.bin -O ndk.bin
  - chmod a+x ndk.bin
  - "./ndk.bin 1> /dev/null 2>&1"
  - chmod a+x ./android-ndk-r10d/ndk-build

  # Install emulator
  - export EMULATOR="system-images;android-$EMULATOR_API;$EMULATOR_TAG;$EMULATOR_ABI"
  - echo yes | sdkmanager "platforms;android-$EMULATOR_API" # Install sdk
  - echo yes | sdkmanager "$EMULATOR" # Install system image
  - sdkmanager --list || true # Check everything is updated

  # Create and start emulator
  - echo no | avdmanager create avd -n test -k "$EMULATOR" -f # Create emulator
  - which emulator # ensure we are using the right emulator (home/emulator/)
  - emulator -avd test -no-window -camera-back emulated -camera-front emulated -memory 2048 -writable-system & # Launch
  - adb wait-for-device # Wait for adb process
  - adb remount # Mount as writable

before_script:
  - android-wait-for-emulator # Wait for emulator ready to interact
  - adb shell settings put global window_animation_scale 0 & # Disable animations
  - adb shell settings put global transition_animation_scale 0 & # Disable animations
  - adb shell settings put global animator_duration_scale 0 & # Disable animations

  - sleep 10 # Sleep 10 seconds just in case
  - adb shell input keyevent 82 & # Dispatch unlock event
  - adb logcat -c # Clear logcat

script:
  - echo "Travis branch is $TRAVIS_BRANCH"
  - echo "Travis branch is in pull request? $TRAVIS_PULL_REQUEST"
  - echo "Travis tag $TRAVIS_TAG"

  - ./gradlew clean --stacktrace --continue
  - ./gradlew :rajawali:jacocoTestReport :rajawali:assembleAndroidTest --stacktrace --continue
  - adb shell setprop dalvik.vm.dexopt-flags v=n,o=v
  - ./gradlew :rajawali:connectedCheck --stacktrace --continue
  - ./gradlew :vuforia:check --stacktrace --continue
  - ./gradlew :vr:check --stacktrace --continue
  - ./gradlew :wear:check --stacktrace --continue
  #- ./gradlew :wear-example:check --stacktrace --continue
  #- ./gradlew :examples:check --stacktrace --continue
  - if $TRAVIS_PULL_REQUEST; then "Skipping uploadArchives on Pull Request"; else ./gradlew
    :rajawali:uploadArchives --stacktrace --continue; ./gradlew :vuforia:uploadArchives
    --stacktrace --continue; ./gradlew :vr:uploadArchives --stacktrace --continue; ./gradlew
    :wear:uploadArchives --stacktrace --continue; fi

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

notifications:
  email:
  - info@rozengain.com
  - rajawali.framework@gmail.com
  - Jared.Woolston@gmail.com
  slack:
    secure: F5PgdetFfZrWrGlSg1jRQrYHH0miPpSqM969mzwh042OLybpAND4o7ouNAHYbWtVMVJ1KIK/bPKCdvW4Iy6pJpyntX+rQBYN6Tfs4bN/ivOrePBBDPLfr/uPGIY/EPAw4U7qeprRANAPT3IutCqx9FM/IAfNtzOWKcPOTRXNeoY=
after_success:
- bash <(curl -s https://codecov.io/bash)
