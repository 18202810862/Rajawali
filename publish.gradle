apply plugin: 'org.jetbrains.dokka'
apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'signing'

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    sourceDirs = files('src/main/java')
}

task dokkaJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from "$buildDir/javadoc"
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        android.libraryVariants.all { variant ->
            "maven${variant.name.capitalize()}Aar"(MavenPublication) {
                from components.findByName("android${variant.name.capitalize()}")
                groupId group
                artifactId POM_ARTIFACT_ID
                version version

                artifact dokkaJar
                artifact androidSourcesJar

                pom.withXml {
                    def root = asNode()

                    root.children().last() + {
                        resolveStrategy = DELEGATE_FIRST

                        description POM_DESCRIPTION
                        name POM_NAME
                        url POM_URL
                        scm {
                            url POM_SCM_URL
                            connection POM_SCM_CONNECTION
                            developerConnection POM_SCM_DEV_CONNECTION
                        }
                        licenses {
                            license {
                                name POM_LICENCE_NAME
                                url POM_LICENCE_URL
                                distribution POM_LICENCE_DIST
                            }
                        }
                        developers {
                            developer {
                                id POM_DEVELOPER_ID
                                name POM_DEVELOPER_NAME
                                email POM_DEVELOPER_EMAIL
                                organization POM_DEVELOPER_ORGANIZATION
                                organizationUrl POM_DEVELOPER_ORGANIZATION_URL
                            }
                        }
                    }
                }
            }
        }
    }

    repositories {
        def releaseUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
        def snapshotUrl = "https://oss.sonatype.org/content/repositories/snapshots"

        maven {
            url !version.contains("SNAPSHOT") ? releaseUrl : snapshotUrl
            credentials {
                username System.getenv('SONATYPE_USERNAME') ?: ""
                password System.getenv('SONATYPE_PASSWORD') ?: ""
            }
        }
    }
}

signing {
    required false
    sign publishing.publications
}
